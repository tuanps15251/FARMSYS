/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.farmsys.UI;

import AppPackage.AnimationClass;
import com.farmsys.Entity.NhanVien;
import com.farmsys.Helper.Auth;
import com.farmsys.Helper.MailHelper;
import com.farmsys.Helper.MsgBox;
import com.farmsys.dao.NhanVienDAO;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import jaco.mp3.player.MP3Player;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.UUID;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;

/**
 *
 * @author trieu
 */
public class DangNhapJDialog extends javax.swing.JDialog implements Runnable, ThreadFactory {

    /**
     * Creates new form DangNhapJDialog
     *
     * @param parent
     * @param modal
     */
    public DangNhapJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        WebcamQRcode.setBackground(new Color(0, 0, 0, 0));
        animation(false);

//        WebcamQRcode.setBackground(new Color(1.0f, 1.0f, 1.0f, 0.0f));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WebcamQRcode = new javax.swing.JFrame();
        panelquetqr = new javax.swing.JPanel();
        pnlTong = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        pnldoimk = new javax.swing.JPanel();
        txttaikhoanlaymk = new javax.swing.JTextField();
        txtmknew = new javax.swing.JPasswordField();
        btndoimk = new javax.swing.JButton();
        lmltk = new javax.swing.JLabel();
        lblmkmoi = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        lblquaylaidangnhap = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        txtOTP = new javax.swing.JTextField();
        lblOTP = new javax.swing.JLabel();
        bntgetOPT = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        txtxnmknew = new javax.swing.JPasswordField();
        lblxn = new javax.swing.JLabel();
        Doimk = new javax.swing.JLabel();
        Pnlnhap = new javax.swing.JPanel();
        txtMaNV = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        btnDangNhap = new javax.swing.JButton();
        lblLogin = new javax.swing.JLabel();
        lbltk = new javax.swing.JLabel();
        lblmk = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lblquenmk = new javax.swing.JLabel();
        lblsaimk = new javax.swing.JLabel();
        lblsaitk = new javax.swing.JLabel();
        pnlfootQR = new javax.swing.JPanel();
        lblloginwwithQR = new javax.swing.JLabel();
        txtQRcode = new javax.swing.JTextField();

        WebcamQRcode.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        WebcamQRcode.setTitle("Webcam");
        WebcamQRcode.setAlwaysOnTop(true);
        WebcamQRcode.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        WebcamQRcode.setLocationByPlatform(true);
        WebcamQRcode.setMinimumSize(new java.awt.Dimension(470, 300));
        WebcamQRcode.setUndecorated(true);

        panelquetqr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelquetqrMouseClicked(evt);
            }
        });
        panelquetqr.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout WebcamQRcodeLayout = new javax.swing.GroupLayout(WebcamQRcode.getContentPane());
        WebcamQRcode.getContentPane().setLayout(WebcamQRcodeLayout);
        WebcamQRcodeLayout.setHorizontalGroup(
            WebcamQRcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelquetqr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        WebcamQRcodeLayout.setVerticalGroup(
            WebcamQRcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelquetqr, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Đăng nhập");
        setMinimumSize(new java.awt.Dimension(950, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlTong.setBackground(new java.awt.Color(150, 250, 150));
        pnlTong.setMinimumSize(new java.awt.Dimension(950, 470));
        pnlTong.setPreferredSize(new java.awt.Dimension(950, 470));
        pnlTong.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbllogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/logofarmSys.gif"))); // NOI18N
        lbllogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbllogoMouseEntered(evt);
            }
        });
        pnlTong.add(lbllogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        pnldoimk.setBackground(new java.awt.Color(255, 255, 255));

        txttaikhoanlaymk.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txttaikhoanlaymk.setForeground(new java.awt.Color(51, 51, 51));
        txttaikhoanlaymk.setBorder(null);

        txtmknew.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txtmknew.setForeground(new java.awt.Color(51, 51, 51));
        txtmknew.setBorder(null);

        btndoimk.setBackground(new java.awt.Color(153, 255, 153));
        btndoimk.setText("Đổi mật khẩu");
        btndoimk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndoimkActionPerformed(evt);
            }
        });

        lmltk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lmltk.setForeground(new java.awt.Color(0, 230, 0));
        lmltk.setText("Tài khoản");

        lblmkmoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblmkmoi.setForeground(new java.awt.Color(0, 230, 0));
        lblmkmoi.setText("Mật khẩu mới");

        lblquaylaidangnhap.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblquaylaidangnhap.setText("Đăng nhập");
        lblquaylaidangnhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblquaylaidangnhapMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblquaylaidangnhapMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblquaylaidangnhapMouseExited(evt);
            }
        });

        txtOTP.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txtOTP.setForeground(new java.awt.Color(51, 51, 51));
        txtOTP.setBorder(null);
        txtOTP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOTPKeyPressed(evt);
            }
        });

        lblOTP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblOTP.setForeground(new java.awt.Color(0, 230, 0));
        lblOTP.setText("OTP");

        bntgetOPT.setBackground(new java.awt.Color(153, 255, 153));
        bntgetOPT.setText("GET OTP");
        bntgetOPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntgetOPTActionPerformed(evt);
            }
        });

        txtxnmknew.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txtxnmknew.setForeground(new java.awt.Color(51, 51, 51));
        txtxnmknew.setBorder(null);

        lblxn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblxn.setForeground(new java.awt.Color(0, 230, 0));
        lblxn.setText("Xác nhận mật khẩu mới");

        Doimk.setBackground(new java.awt.Color(0, 230, 0));
        Doimk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Doimk.setForeground(new java.awt.Color(0, 230, 0));
        Doimk.setText("Đổi mật khẩu");

        javax.swing.GroupLayout pnldoimkLayout = new javax.swing.GroupLayout(pnldoimk);
        pnldoimk.setLayout(pnldoimkLayout);
        pnldoimkLayout.setHorizontalGroup(
            pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldoimkLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnldoimkLayout.createSequentialGroup()
                        .addComponent(lmltk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(441, 441, 441))
                    .addGroup(pnldoimkLayout.createSequentialGroup()
                        .addComponent(txttaikhoanlaymk, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnldoimkLayout.createSequentialGroup()
                        .addComponent(lblmkmoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(262, 262, 262))
                    .addGroup(pnldoimkLayout.createSequentialGroup()
                        .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnldoimkLayout.createSequentialGroup()
                                    .addComponent(lblOTP, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(bntgetOPT)
                                        .addGroup(pnldoimkLayout.createSequentialGroup()
                                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(1, 1, 1)))
                                    .addComponent(txtmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtxnmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnldoimkLayout.createSequentialGroup()
                                    .addComponent(btndoimk, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblquaylaidangnhap)))
                            .addComponent(lblxn, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Doimk))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnldoimkLayout.setVerticalGroup(
            pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldoimkLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Doimk)
                .addGap(33, 33, 33)
                .addComponent(lmltk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttaikhoanlaymk, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bntgetOPT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblOTP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(lblmkmoi, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(txtmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblxn, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtxnmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnldoimkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblquaylaidangnhap)
                    .addComponent(btndoimk, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pnldoimkLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtOTP, txtmknew, txttaikhoanlaymk, txtxnmknew});

        pnlTong.add(pnldoimk, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 500));

        Pnlnhap.setBackground(new java.awt.Color(255, 255, 255));
        Pnlnhap.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMaNV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMaNV.setBorder(null);
        txtMaNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaNVFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaNVFocusLost(evt);
            }
        });
        txtMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVActionPerformed(evt);
            }
        });
        txtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaNVKeyPressed(evt);
            }
        });
        Pnlnhap.add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 125, 370, 34));

        txtMatKhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMatKhau.setBorder(null);
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyPressed(evt);
            }
        });
        Pnlnhap.add(txtMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 366, 34));

        btnDangNhap.setBackground(new java.awt.Color(153, 255, 153));
        btnDangNhap.setText("ĐĂNG NHẬP");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });
        Pnlnhap.add(btnDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 161, 45));

        lblLogin.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        lblLogin.setForeground(new java.awt.Color(0, 230, 0));
        lblLogin.setText("Login");
        Pnlnhap.add(lblLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 165, -1));

        lbltk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbltk.setForeground(new java.awt.Color(0, 230, 0));
        lbltk.setText("Username");
        Pnlnhap.add(lbltk, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 97, -1, -1));

        lblmk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblmk.setForeground(new java.awt.Color(0, 230, 0));
        lblmk.setText("Mật khẩu");
        Pnlnhap.add(lblmk, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));
        Pnlnhap.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 165, 370, 10));
        Pnlnhap.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 366, 10));

        lblquenmk.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblquenmk.setText("Quên mật khẩu?");
        lblquenmk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblquenmkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblquenmkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblquenmkMouseExited(evt);
            }
        });
        Pnlnhap.add(lblquenmk, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        lblsaimk.setForeground(new java.awt.Color(255, 0, 51));
        Pnlnhap.add(lblsaimk, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        lblsaitk.setForeground(new java.awt.Color(255, 0, 51));
        Pnlnhap.add(lblsaitk, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        pnlfootQR.setBackground(new java.awt.Color(255, 255, 255));
        pnlfootQR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlfootQRMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlfootQRLayout = new javax.swing.GroupLayout(pnlfootQR);
        pnlfootQR.setLayout(pnlfootQRLayout);
        pnlfootQRLayout.setHorizontalGroup(
            pnlfootQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        pnlfootQRLayout.setVerticalGroup(
            pnlfootQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        Pnlnhap.add(pnlfootQR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 120, 10));

        lblloginwwithQR.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        lblloginwwithQR.setText("Login with QR code");
        lblloginwwithQR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblloginwwithQRMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblloginwwithQRMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblloginwwithQRMouseExited(evt);
            }
        });
        Pnlnhap.add(lblloginwwithQR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 120, 20));

        pnlTong.add(Pnlnhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 0, 460, 500));
        pnlTong.add(txtQRcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 200, -1));

        getContentPane().add(pnlTong, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        this.dangNhap();
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void txtMatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.dangNhap();
        }
    }//GEN-LAST:event_txtMatKhauKeyPressed

    private void txtMaNVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNVKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.dangNhap();
        }
    }//GEN-LAST:event_txtMaNVKeyPressed

    private void txtMaNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNVFocusGained
        if (txtMaNV.getText().equalsIgnoreCase("Nhập tên đăng nhập hoặc Email")) {
            txtMaNV.setText("");
            txtMaNV.setForeground(Color.BLACK);
            txtMatKhau.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtMaNVFocusGained

    private void txtMaNVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNVFocusLost
        if (txtMaNV.getText().length() == 0) {
            txtMaNV.setText("Nhập tên đăng nhập hoặc Email");
            txtMaNV.setForeground(Color.gray);

        }
    }//GEN-LAST:event_txtMaNVFocusLost

    private void lblquenmkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquenmkMouseClicked
        animation(true);
    }//GEN-LAST:event_lblquenmkMouseClicked

    private void btndoimkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndoimkActionPerformed
        this.doiMatKhau(manvotp);
        txttaikhoanlaymk.setText("");
        txtOTP.setText("");
        txtmknew.setText("");
        txtxnmknew.setText("");
    }//GEN-LAST:event_btndoimkActionPerformed

    private void lblquaylaidangnhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquaylaidangnhapMouseClicked
        animation(false);
    }//GEN-LAST:event_lblquaylaidangnhapMouseClicked

    private void txtOTPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOTPKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOTPKeyPressed

    private void bntgetOPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntgetOPTActionPerformed
        this.SendOTP();
    }//GEN-LAST:event_bntgetOPTActionPerformed

    private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVActionPerformed

    private void lblquenmkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquenmkMouseEntered
        lblquenmk.setForeground(new Color(0, 230, 0));
    }//GEN-LAST:event_lblquenmkMouseEntered

    private void lblquenmkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquenmkMouseExited
        lblquenmk.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblquenmkMouseExited

    private void lblquaylaidangnhapMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquaylaidangnhapMouseEntered
        lblquaylaidangnhap.setForeground(new Color(0, 230, 0));
    }//GEN-LAST:event_lblquaylaidangnhapMouseEntered

    private void lblquaylaidangnhapMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquaylaidangnhapMouseExited
        lblquaylaidangnhap.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblquaylaidangnhapMouseExited

    private void pnlfootQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlfootQRMouseClicked

    }//GEN-LAST:event_pnlfootQRMouseClicked

    private void lblloginwwithQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblloginwwithQRMouseClicked
        pnlfootQR.setBackground(new Color(0, 230, 0));
        initWebcam(true);
        WebcamQRcode.setVisible(true);

    }//GEN-LAST:event_lblloginwwithQRMouseClicked

    private void lblloginwwithQRMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblloginwwithQRMouseEntered
        lblloginwwithQR.setForeground(new Color(0, 230, 0));
    }//GEN-LAST:event_lblloginwwithQRMouseEntered

    private void lblloginwwithQRMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblloginwwithQRMouseExited
        lblloginwwithQR.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblloginwwithQRMouseExited

    private void panelquetqrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelquetqrMouseClicked
        webcam.close();
        WebcamQRcode.setVisible(false);
    }//GEN-LAST:event_panelquetqrMouseClicked

    private void lbllogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbllogoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lbllogoMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DangNhapJDialog dialog = new DangNhapJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Doimk;
    private javax.swing.JPanel Pnlnhap;
    private javax.swing.JFrame WebcamQRcode;
    private javax.swing.JButton bntgetOPT;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btndoimk;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblOTP;
    private javax.swing.JLabel lblloginwwithQR;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JLabel lblmk;
    private javax.swing.JLabel lblmkmoi;
    private javax.swing.JLabel lblquaylaidangnhap;
    private javax.swing.JLabel lblquenmk;
    private javax.swing.JLabel lblsaimk;
    private javax.swing.JLabel lblsaitk;
    private javax.swing.JLabel lbltk;
    private javax.swing.JLabel lblxn;
    private javax.swing.JLabel lmltk;
    private javax.swing.JPanel panelquetqr;
    private javax.swing.JPanel pnlTong;
    private javax.swing.JPanel pnldoimk;
    private javax.swing.JPanel pnlfootQR;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtOTP;
    private javax.swing.JTextField txtQRcode;
    private javax.swing.JPasswordField txtmknew;
    private javax.swing.JTextField txttaikhoanlaymk;
    private javax.swing.JPasswordField txtxnmknew;
    // End of variables declaration//GEN-END:variables
    MP3Player Ping3 = new MP3Player(new File("src\\Sounds\\UI.mp3"));
    private WebcamPanel panel = null;
    private Webcam webcam = null;

    NhanVienDAO dao = new NhanVienDAO();
    NhanVien nv = new NhanVien();

    private String OTP;
    private String manvotp;
    private String emailNV;
    private String tempOTP;

    private static final long serialVersionUID = 6441489157408381878L;
    private final Executor executor = Executors.newSingleThreadExecutor(this);

    private void init() {
        setLocationRelativeTo(null);
        WebcamQRcode.setLocationRelativeTo(null);
        txtMaNV.grabFocus();
    }

    void update() {
        String nv = txtQRcode.getText();
        try {
            dao.updateQRcode(nv);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    //Gửi mã QR mới
    void SendOTP() {
        try {
            manvotp = txttaikhoanlaymk.getText();
            NhanVien nhanVien = dao.selectById(manvotp);
            if (nhanVien != null) {//check tk có tồn tại không
                emailNV = dao.selectById(manvotp).getEmail();//check mail nv
                if (emailNV == null) {
                    MsgBox.alert(this, "Tài khoản này chưa có email");
                } else {//tài khoản có mail --> gửi mail -->check otp
                    MsgBox.alert(this, "Đang gửi mail...");
                    this.randomString();
                    MailHelper.sendText(emailNV, "OTP - Quên mật khẩu", "OTP:" + " " + OTP);
                    MsgBox.alert(this, "Có 1 mã OTP đã được gửi vào mail của bạn !");
                }
            } else {
                MsgBox.alert(this, "Tài khoản không tồn tại");
            }
        } catch (Exception e) {
        }
    }

    void dangNhap() {
        try {
            String taikhoan = txtMaNV.getText().trim();
            String matKhau = new String(txtMatKhau.getPassword());
            String QRcode1 = txtQRcode.getText().trim();
            NhanVien nhanVien = dao.selectById(taikhoan);
            NhanVien nhanVienEM = dao.selectByEmail(taikhoan);
            NhanVien nhanvienQRcode = dao.selectByQRcodeFormNV(QRcode1);
            if (nhanVien == null) {
                if (nhanVienEM == null) {
                    if (nhanvienQRcode == null) {
//                        MsgBox.alert(this, "Sai tên đăng nhập hoặc Email!");
//                        clearForm();
                        lblsaitk.setText("Sai tài khoản !");
                        lblsaimk.setText("");
                    } else if (!QRcode1.equals(nhanvienQRcode.getQRcodeString())) {
                        MsgBox.alert(this, "Mã QR code không đúng !");
                    } else {
                        Auth.user = nhanvienQRcode;
                        this.dispose();
                        webcam.close();

                        this.WebcamQRcode.dispose();
                    }

                } else if (!matKhau.equals(nhanVienEM.getMatKhau())) {
//                    clearForm();
                } else {
                    Auth.user = nhanVienEM;
                    this.dispose();
                    webcam.close();

                    this.WebcamQRcode.dispose();
                }
            } else if (!matKhau.equals(nhanVien.getMatKhau())) {
//                MsgBox.alert(this, "Sai mật khẩu!");
                lblsaimk.setText("Sai mật khẩu !");
                lblsaitk.setText("");
//                clearForm();
            } else {
                Auth.user = nhanVien;
                System.out.println(Auth.user);
                this.dispose();
                webcam.close();
                this.WebcamQRcode.dispose();

            }

        } catch (Exception e) {

        }

    }

    void ketThuc() {
        if (MsgBox.confirm(this, "Bạn muốn kết thúc ứng dụng?")) {
            System.exit(0);
        }
    }

    public static String HienThihoten() {
        return Auth.user.getHoTen();
    }

    public static String HienThivaitro() {
        return (Auth.user.isVaiTro() ? "Trưởng phòng" : "Nhân viên");
    }

    public static String HienThiTen() {
        return Auth.user.getMaNV();
    }

    private void randomString() {
        OTP = UUID.randomUUID().toString();
    }

    private void doiMatKhau(String manv) {
        if (txttaikhoanlaymk.getText().isEmpty()) {
            MsgBox.alert(this, "Bạn chưa nhập tài khoản !");
        } else {
            String matKhauMoi1 = new String(txtmknew.getPassword());
            String matKhauMoi2 = new String(txtxnmknew.getPassword());
            if (!matKhauMoi1.equals(matKhauMoi2)) {
                MsgBox.alert(this, "Xác nhận mật khẩu không đúng!");
                this.clearForm();
            } else {
                tempOTP = txtOTP.getText();
                if (tempOTP.equals(OTP)) {//đúng OTP thì hiện form đổi mk
                    nv.setMatKhau(matKhauMoi1);
                    nv.setMaNV(manv);
                    dao.resetPass(nv);
                    MsgBox.alert(this, "Đổi mật khẩu thành công!");
                } else {
                    MsgBox.alert(this, "Bạn nhập sai OTP");
                    txtMaNV.setText("");
                    txtOTP.setText("");
                    txtmknew.setText("");
                    txtxnmknew.setText("");
                }
            }
        }

    }

    private void clearForm() {
        txtMaNV.setText("");
        txtMatKhau.setText("");
        txtmknew.setText("");
        txtxnmknew.setText("");
        txtQRcode.setText("");
        txtMaNV.grabFocus();
    }

    private void initWebcam(boolean truefalse) {
        if (truefalse) {
            Dimension size = WebcamResolution.QVGA.getSize();
            webcam = Webcam.getWebcams().get(0); //0 is default webcam
            webcam.setViewSize(size);

            panel = new WebcamPanel(webcam);
            panel.setPreferredSize(size);
            panel.setFPSDisplayed(true);

            panelquetqr.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 300));

            executor.execute(this);
        } else {

        }

    }

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }

            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException e) {
                //No result...
            }

            if (result != null) {
                txtQRcode.setText(result.getText());
                this.dangNhap();
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }

    public void animation(boolean evt) {
        if (evt) {
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
            this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
            AnimationClass anim = new AnimationClass();
            anim.jLabelXRight(lbllogo.getX(), 450, 1, 1, lbllogo);
            txtMaNV.setEnabled(false);
            txtMatKhau.setEnabled(false);
            btnDangNhap.setEnabled(false);
            lblquenmk.setEnabled(false);
            lblloginwwithQR.setEnabled(false);
            lblquaylaidangnhap.setEnabled(true);
            txttaikhoanlaymk.setEnabled(true);
            txtOTP.setEnabled(true);
            txtmknew.setEnabled(true);
            txtxnmknew.setEnabled(true);

        } else {
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
            this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
            AnimationClass anim = new AnimationClass();
            anim.jLabelXLeft(450, 0, 1, 1, lbllogo);
            txtMaNV.setEnabled(true);
            txtMatKhau.setEnabled(true);
            btnDangNhap.setEnabled(true);
            lblquenmk.setEnabled(true);
            lblloginwwithQR.setEnabled(true);
            lblquaylaidangnhap.setEnabled(false);
            txttaikhoanlaymk.setEnabled(false);
            txtOTP.setEnabled(false);
            txtmknew.setEnabled(false);
            txtxnmknew.setEnabled(false);
        }

    }
}
