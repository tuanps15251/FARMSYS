/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.farmsys.UI;

import com.farmsys.Entity.CayTrong;
import com.farmsys.Helper.MsgBox;
import com.farmsys.Helper.XImage;
import com.farmsys.dao.CayTrongDAO;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class CayTrongPanel extends javax.swing.JPanel {

    int index = -1;
    CayTrongDAO ctdao = new CayTrongDAO();
    JFileChooser fileChooser = new JFileChooser();

    /**
     * Creates new form CayTrongPanel
     */
    public CayTrongPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnltong = new javax.swing.JPanel();
        pnlList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCayTrong = new javax.swing.JTable();
        pnlEdit = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTenCay = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtThoiGianThuHoach = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDoTDS = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDoPH = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNhietDo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDoAm = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        lblHinh = new javax.swing.JLabel();
        txtMaCay = new javax.swing.JTextField();

        pnltong.setBackground(new java.awt.Color(255, 255, 255));
        pnltong.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QUẢN LÝ CÂY TRỒNG", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        pnltong.setMinimumSize(new java.awt.Dimension(1083, 750));
        pnltong.setPreferredSize(new java.awt.Dimension(1083, 750));
        pnltong.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCayTrong.setAutoCreateRowSorter(true);
        tblCayTrong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCayTrong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tên cây trồng", "Thời gian thu hoạch", "Độ TDS", "Độ PH", "Nhiệt độ", "Độ ẩm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCayTrong.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCayTrong.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCayTrong.setShowGrid(false);
        tblCayTrong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCayTrongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCayTrong);

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );

        pnltong.add(pnlList, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 44, 590, 670));

        pnlEdit.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Tên cây trồng");

        txtTenCay.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Thời gian thu hoạch (đơn vị: ngày)");

        txtThoiGianThuHoach.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Độ TDS giới hạn (ppm)");

        txtDoTDS.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Nồng độ (pH)");

        txtDoPH.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Nhiệt độ (°C)");

        txtNhietDo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Độ ẩm (%)");

        txtDoAm.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Add.png"))); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Refresh.png"))); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Delete.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(255, 255, 255));
        btnNew.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/new.png"))); // NOI18N
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        lblHinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/FarmSys.png"))); // NOI18N
        lblHinh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        lblHinh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(124, 124, 124))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(312, 312, 312))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtTenCay)
                .addGap(10, 10, 10))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(144, 144, 144))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtThoiGianThuHoach)
                .addGap(10, 10, 10))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(98, 98, 98)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtDoTDS, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(153, 153, 153)
                .addComponent(txtDoPH, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(178, 178, 178)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(47, 47, 47))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtNhietDo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153)
                .addComponent(txtDoAm, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(176, 176, 176))
        );

        pnlEditLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDoAm, txtDoPH, txtNhietDo});

        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 168, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(txtTenCay, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(txtThoiGianThuHoach, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDoTDS)
                    .addComponent(txtDoPH, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNhietDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoAm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(109, 109, 109))
        );

        pnlEditLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtDoAm, txtDoPH, txtNhietDo});

        pnltong.add(pnlEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 34, 470, 690));
        pnltong.add(txtMaCay, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 630, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnltong, javax.swing.GroupLayout.DEFAULT_SIZE, 1093, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnltong, javax.swing.GroupLayout.PREFERRED_SIZE, 739, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblCayTrongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCayTrongMouseClicked
        if (evt.getClickCount() == 1) {
            this.index = tblCayTrong.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblCayTrongMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (Validation()) {
            if (checkTrungTen(txtTenCay)) {
                insert();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (Validation()) {
            update();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed

        this.clear();
    }//GEN-LAST:event_btnNewActionPerformed

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        // TODO add your handling code here:
        this.chonAnh();
    }//GEN-LAST:event_lblHinhMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlList;
    private javax.swing.JPanel pnltong;
    private javax.swing.JTable tblCayTrong;
    private javax.swing.JTextField txtDoAm;
    private javax.swing.JTextField txtDoPH;
    private javax.swing.JTextField txtDoTDS;
    private javax.swing.JTextField txtMaCay;
    private javax.swing.JTextField txtNhietDo;
    private javax.swing.JTextField txtTenCay;
    private javax.swing.JTextField txtThoiGianThuHoach;
    // End of variables declaration//GEN-END:variables

    public void init() {
        load();
        tblCayTrong.setDefaultEditor(Object.class, null);
        new Timer(60000, (ActionEvent e) -> {
            this.load();
        }).start();
        clear();
    }

    void load() {
        DefaultTableModel model = (DefaultTableModel) tblCayTrong.getModel();
        model.setRowCount(0);
        try {
            List<CayTrong> list = ctdao.selectAll();
            for (CayTrong ct : list) {
                Object[] row = {
                    ct.getTenCay(),
                    ct.getThoiGianThuHoach(),
                    ct.getDoTDS(),
                    ct.getDoPH(),
                    ct.getNhietDo(),
                    ct.getDoAm(),
                    ct.getHinh()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void insert() {
        CayTrong model = getModelInsert();
        try {
            ctdao.insert(model);
            this.load();
            this.clear();
            MsgBox.alert(this, "Thêm mới thành công!");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    void update() {
        CayTrong model = getModel();
        try {
            ctdao.update(model);
            this.load();
            this.clear();
            MsgBox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }

    }

    void delete() {
        if (txtTenCay.getText().isEmpty()) {
            MsgBox.alert(this, "Bạn chưa chọn cây cần xóa");
        } else {
            if (MsgBox.confirm(this, "Bạn có muốn xóa hay không?")) {
                String Tencay = txtTenCay.getText();
                try {
                    ctdao.delete(Tencay);
                    this.load();
                    this.clear();
                    MsgBox.alert(this, "Xóa thành công!");
                } catch (Exception e) {
                    MsgBox.alert(this, "Xóa thất bại!");
                }
            }
        }

    }

    void clear() {
        CayTrong model = new CayTrong();
        txtTenCay.setText("");
        txtThoiGianThuHoach.setText("");
        txtDoAm.setText("60");
        txtDoPH.setText("");
        txtDoTDS.setText("");
        txtNhietDo.setText("");
        lblHinh.setIcon(new ImageIcon("src\\com\\farmsys\\icons\\FarmSys.png"));
        this.getstatus(true);
    }

    void edit() {
        try {
            String tencay = (String) tblCayTrong.getValueAt(this.index, 0);
            CayTrong model = ctdao.selectByTenCay(tencay);

            if (model != null) {
                this.setModel(model);
                this.getstatus(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void setModel(CayTrong model) {
        txtMaCay.setText(String.valueOf(model.getMaCay()));
        txtTenCay.setText(model.getTenCay());
        txtThoiGianThuHoach.setText(String.valueOf(model.getThoiGianThuHoach()));
        txtDoTDS.setText(String.valueOf(model.getDoTDS()));
        txtDoPH.setText(String.valueOf(model.getDoPH()));
        txtNhietDo.setText(String.valueOf(model.getNhietDo()));
        txtDoAm.setText(String.valueOf(model.getDoAm()));
        lblHinh.setToolTipText(model.getHinh());
        if (model.getHinh() != null) {
            lblHinh.setToolTipText(model.getHinh());
            ImageIcon icon = XImage.read(model.getHinh()); // Lấy địa chỉ của file Icon

            //Chuyển Icon sang image và điều chỉnh kích thước
            Image scaleIcon = icon.getImage().getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), Image.SCALE_DEFAULT);
            lblHinh.setIcon(new javax.swing.ImageIcon(scaleIcon));
        } else {
            lblHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/avatar.png")));
        }
    }

    CayTrong getModel() {
        if (Validation()) {
            CayTrong model = new CayTrong();
            model.setMaCay(Integer.valueOf(txtMaCay.getText()));
            model.setTenCay(txtTenCay.getText());
            model.setThoiGianThuHoach(Integer.valueOf(txtThoiGianThuHoach.getText()));
            model.setDoTDS(Float.valueOf(txtDoTDS.getText()));
            model.setDoPH(Float.valueOf(txtDoPH.getText()));
            model.setNhietDo(Integer.valueOf(txtNhietDo.getText()));
            model.setDoAm(Integer.valueOf(txtDoAm.getText()));
            model.setHinh(lblHinh.getToolTipText());
            return model;
        }
        return null;
    }

    CayTrong getModelInsert() {
        if (Validation()) {
            CayTrong model = new CayTrong();
            model.setTenCay(txtTenCay.getText());
            model.setThoiGianThuHoach(Integer.valueOf(txtThoiGianThuHoach.getText()));
            model.setDoTDS(Float.valueOf(txtDoTDS.getText()));
            model.setDoPH(Float.valueOf(txtDoPH.getText()));
            model.setNhietDo(Integer.valueOf(txtNhietDo.getText()));
            model.setDoAm(Integer.valueOf(txtDoAm.getText()));
            if (lblHinh.getToolTipText() == null) {
                model.setHinh("noimage.jpg");
            } else {
                model.setHinh(lblHinh.getToolTipText());
            }
            return model;
        }
        return null;
    }

    void getstatus(boolean insertable) {
        btnAdd.setEnabled(insertable);
        btnUpdate.setEnabled(!insertable);
        btnDelete.setEnabled(!insertable);
        boolean first = this.index > 0;
        boolean last = this.index < tblCayTrong.getRowCount() - 1;

    }

//    void selectImage() {
//        JFileChooser files = new JFileChooser("D:\\Du An 1\\Github\\Duan1\\TestFarmSys\\logos\\fpt.png");
//        int fileChooser = files.showOpenDialog(null);
//        if (fileChooser == JFileChooser.APPROVE_OPTION) {
//            File file = files.getSelectedFile();
//            if (XImage.saveImage(file)) {
//                // Hiển thị hình lên form 
//                lblHinh.setIcon(XImage.read(file.getName()));
//                Image scaleIcon = file.().getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), Image.SCALE_DEFAULT);
//                lblHinh.setIcon(new javax.swing.ImageIcon(scaleIcon));
//                lblHinh.setToolTipText(file.getName());
//            }
//        }
//    }
    void chonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.save(file); // Lưu hình vào thư mục logos
            ImageIcon icon = XImage.read(file.getName()); // Đọc hình từ logos
            Image scaleIcon = icon.getImage().getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), Image.SCALE_DEFAULT);
            lblHinh.setIcon(new javax.swing.ImageIcon(scaleIcon));
            lblHinh.setToolTipText(file.getName()); //Giữ tên hình trong toolTip
        }
    }

    public boolean checkNullHinh() {
        if (lblHinh.getToolTipText() != null) {
            return true;
        } else {
            MsgBox.alert(this, "Không được để trống hình.");
            return false;
        }
    }

    public boolean checkTrungTen(JTextField txt) {
        if (ctdao.selectByTenCay(txt.getText()) == null) {
            return true;
        } else {
            MsgBox.alert(this, "Tên giàn đã tồn tại !");
            txtTenCay.requestFocus();
            return false;
        }
    }

    boolean Validation() {

        if (txtTenCay.getText().isEmpty()) {
            MsgBox.alert(this, "Tên cây không được để trống ");
            txtTenCay.requestFocus();
            return false;
        }

        if (txtThoiGianThuHoach.getText().isEmpty()) {
            MsgBox.alert(this, "Thời gian thu hoạch cây không được để trống ");
            txtThoiGianThuHoach.requestFocus();
            return false;
        }
        if (txtDoTDS.getText().isEmpty()) {
            MsgBox.alert(this, "Độ TDS của cây không được để trống ");
            txtDoTDS.requestFocus();
            return false;
        }
        if (txtDoPH.getText().isEmpty()) {
            MsgBox.alert(this, "Độ PH của cây không được để trống ");
            txtDoPH.requestFocus();
            return false;
        }
        if (txtNhietDo.getText().isEmpty()) {
            MsgBox.alert(this, "Nhiệt độ cây không được để trống ");
            txtNhietDo.requestFocus();
            return false;
        }
        if (txtDoAm.getText().isEmpty()) {
            MsgBox.alert(this, "Độ ẩm của cây không được để trống ");
            txtDoAm.requestFocus();
            return false;
        }

        String tencay = txtTenCay.getText();
        if (tencay.length() > 30) {
            MsgBox.alert(this, "Tên cây không được quá 30 kí tự ");
            txtTenCay.requestFocus();
            return false;
        }
//bắt không nhập chữ
        try {
            int ngayTH = Integer.parseInt(txtThoiGianThuHoach.getText());
        } catch (NumberFormatException e) {
            MsgBox.alert(this, "Thời gian thu hoạch không được nhập chữ!");
            txtThoiGianThuHoach.requestFocus();
            return false;
        }
        //
        try {
            Float.parseFloat(txtDoPH.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Độ PH không được nhập chữ!");
            txtDoPH.requestFocus();
            return false;
        }
        //
        try {
            Integer.parseInt(txtNhietDo.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Nhiệt độ không được nhập chữ!");
            txtNhietDo.requestFocus();
            return false;
        }
        //
        try {
            Integer.parseInt(txtDoAm.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Độ PH không được nhập chữ!");
            txtDoAm.requestFocus();
            return false;
        }
        //
        try {
            Float.parseFloat(txtDoTDS.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Độ TDS không được nhập chữ!");
            txtDoTDS.requestFocus();
            return false;
        }

//        
        float tds = Float.parseFloat(txtDoTDS.getText());
        if (tds < 0) {
            MsgBox.alert(this, "Độ TDS phải là số dương");
            txtDoTDS.requestFocus();
            return false;
        }

        int nhietdo = Integer.parseInt(txtNhietDo.getText());
        if (nhietdo < 24 || nhietdo > 27) {
            MsgBox.alert(this, "Nhiệt độ tốt cho cây phải từ 24°C -> 27°C");
            txtNhietDo.requestFocus();
            return false;
        }

        int doAM = Integer.parseInt(txtDoAm.getText());
        if (doAM < 60 || doAM > 65) {
            MsgBox.alert(this, "Độ ẩm tốt cho cây phải từ 60% -> 65%");
            txtDoAm.requestFocus();
            return false;
        }

        //doph
        if ((Float.parseFloat(txtDoPH.getText())) < 0 || (Float.parseFloat(txtDoPH.getText())) > 14) {
            MsgBox.alert(this, "Độ PH của cây từ 1 -> 14");
            txtDoPH.requestFocus();
            return false;
        }

        //ngayth
        if ((Integer.parseInt(txtThoiGianThuHoach.getText())) < 3 || (Integer.parseInt(txtThoiGianThuHoach.getText())) > 60) {
            MsgBox.alert(this, "Thời gian thu hoạch phải từ 3 -> 60 ngày");
            txtThoiGianThuHoach.requestFocus();
            return false;
        }
        return true;
    }
}
